spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化连接数
spring.datasource.initialSize=2
# 最小空闲连接数
spring.datasource.minIdle=5
# 最大空闲连接数
spring.datasource.maxIdle=10
# 最大并发连接数
spring.datasource.maxActive=20
# 获取连接最大等待时间，单位是毫秒
spring.datasource.maxWait=60000
# 超时是否回收
spring.datasource.removeAbandoned=true
# 超时时间，单位是秒
spring.datasource.removeAbandonedTimeout=1200
# 记录超时
spring.datasource.logAbandoned=true
# 多久时间进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 一个连接在池中的最小生存时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# 空闲时检测，建议配置为true，不影响性能，并且保证安全性
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
spring.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
spring.datasource.testOnReturn=false
# 打开PSCache
spring.datasource.poolPreparedStatements=true
# 每个连接PS最大数量
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的stat，防御SQL注入的wall，日志用的log4j
spring.datasource.filters=stat
#spring.datasource.filters=stat,wall,log4j
#spring.datasource.useGlobalDataSourceStat=true
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500;druid.stat.logSlowSql=true

mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
